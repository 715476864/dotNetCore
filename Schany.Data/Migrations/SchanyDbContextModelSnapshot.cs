// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Schany.Data.DataContext;

namespace Schany.Data.Migrations
{
    [DbContext(typeof(SchanyDbContext))]
    partial class SchanyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Schany.Data.Entities.Sys.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsLocked");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<int>("LoginErrorTimes");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Pic")
                        .HasMaxLength(200);

                    b.Property<string>("TrueName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Schany.Data.Entities.Sys.CustomerOpenPlateAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<Guid>("CustomerId");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("OpenPlateType");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerOpenPlateAccounts");
                });

            modelBuilder.Entity("Schany.Data.Entities.Sys.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppendClass")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<int>("DisplayNo");

                    b.Property<bool>("HasPermission");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid?>("ParentModuleId");

                    b.Property<string>("Remark")
                        .HasMaxLength(100);

                    b.Property<string>("Text")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ParentModuleId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Schany.Data.Entities.Sys.MyDictionary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Code");

                    b.Property<DateTime>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<int>("DicType");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdatedTime");

                    b.Property<Guid?>("LastUpdatedUserId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.ToTable("MyDictionaries");
                });

            modelBuilder.Entity("Schany.Data.Entities.Sys.PresetDataPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid?>("ModuleId");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("ModuleId");

                    b.ToTable("PresetDataPermissions");
                });

            modelBuilder.Entity("Schany.Data.Entities.Sys.CustomerOpenPlateAccount", b =>
                {
                    b.HasOne("Schany.Data.Entities.Sys.Customer", "Customer")
                        .WithMany("CustomerOpenPlateAccounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Schany.Data.Entities.Sys.Module", b =>
                {
                    b.HasOne("Schany.Data.Entities.Sys.Module", "ParentModule")
                        .WithMany("Children")
                        .HasForeignKey("ParentModuleId");
                });

            modelBuilder.Entity("Schany.Data.Entities.Sys.MyDictionary", b =>
                {
                    b.HasOne("Schany.Data.Entities.Sys.Customer", "CreateUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Schany.Data.Entities.Sys.PresetDataPermission", b =>
                {
                    b.HasOne("Schany.Data.Entities.Sys.Customer", "CreateUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Schany.Data.Entities.Sys.Module")
                        .WithMany("PresetDataPermissions")
                        .HasForeignKey("ModuleId");
                });
#pragma warning restore 612, 618
        }
    }
}
